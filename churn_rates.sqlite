  
# inspecting the data
  select * from subscriptions
 limit 5;
 
 # Determining the range of months of data provided 
 select Min(subscription_start), max(subscription_start)
 from subscriptions; 
 
#Iâ€™ll be calculating the churn rate for both segments (87 and 30) over the first 3 months of 2017 

#Creating a temporary table months
 with months as( 
 select 
   '2017-01-01' as first_day, 
   '2017-01-31' as last_day
    from subscriptions
  UNION 
   select 
   '2017-02-01' as first_day,
   '2017-02-31' as last_day
    from subscriptions
  Union 
   select 
   '2017-03-01' as first_day, 
   '2017-03-31' as last_day
   from subscriptions ),
   
    cross_join as (
    select * from subscriptions
    cross join months),
    
    #creating a temporary table status from the cross_joint table
    status as(
      select 
      id, 
      first_day as month,
      case 
        when ( subscription_start < first_day )
         and ( subscription_end > first_day 
            or subscription_end is null ) and (segment=87)
            then 1 
            else 0
            end as is_active_87,
      case 
        when ( subscription_start < first_day )
         and ( subscription_end > first_day 
            or subscription_end is null ) and (segment=30)
            then 1 
            else 0
            end as is_active_30,
      case 
          when (subscription_end between first_day 
                 and last_day)  
      and (segment=87)
      then 1
      else 0
      end as is_canceled_87,
      
      case 
          when (subscription_end between first_day 
                 and last_day) 
      and (segment=30)
      then 1
      else 0
      end as is_canceled_30
      
    from cross_join),
    
    #Creating a status_aggregate temporary table that is a SUM of the active and canceled subscriptions for each segment, for each month.
    status_aggregate as (
    select month, 
      sum(is_active_87) as 'sum_active_87',
      sum(is_active_30) as 'sum_active_30',
      sum(is_canceled_87) as 'sum_canceled_87',
      sum(is_canceled_30) as 'sum_canceled_30'
    from status
    Group by 1)
    
    #Calculating the churn rates for the two segments over the three month period.
      select month,
      round((1.0 *sum_canceled_87 / sum_active_87), 2) as 'churn_rate_87', 
      round((1.0 *sum_canceled_30 / sum_active_30), 2) as 'churn_rate_30'
      from status_aggregate;
       
  


       
  
